// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	test "github.com/vektra/mockery/v2/pkg/fixtures"
)

// NewVariadic creates a new instance of Variadic. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVariadic(t interface {
	mock.TestingT
	Cleanup(func())
}) *Variadic {
	mock := &Variadic{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Variadic is an autogenerated mock type for the Variadic type
type Variadic struct {
	mock.Mock
}

// VariadicFunction provides a mock function for the type Variadic
func (_mock *Variadic) VariadicFunction(str string, vFunc test.VariadicFunction) error {
	ret := _mock.Called(str, vFunc)

	if len(ret) == 0 {
		panic("no return value specified for VariadicFunction")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(string, test.VariadicFunction) error); ok {
		r0 = returnFunc(str, vFunc)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

type Variadic_expecter struct {
	mock *mock.Mock
}

func (_m *Variadic) EXPECT() *Variadic_expecter {
	return &Variadic_expecter{mock: &_m.Mock}
}
