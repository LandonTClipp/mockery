// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMapFunc creates a new instance of MapFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMapFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MapFunc {
	mock := &MapFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MapFunc is an autogenerated mock type for the MapFunc type
type MapFunc struct {
	mock.Mock
}

// Get provides a mock function for the type MapFunc
func (_mock *MapFunc) Get(m map[string]func(string) string) error {
	ret := _mock.Called(m)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(map[string]func(string) string) error); ok {
		r0 = returnFunc(m)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

type MapFunc_expecter struct {
	mock *mock.Mock
}

func (_m *MapFunc) EXPECT() *MapFunc_expecter {
	return &MapFunc_expecter{mock: &_m.Mock}
}
