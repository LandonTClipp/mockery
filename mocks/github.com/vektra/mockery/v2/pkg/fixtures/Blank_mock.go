// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewBlank creates a new instance of Blank. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBlank(t interface {
	mock.TestingT
	Cleanup(func())
}) *Blank {
	mock := &Blank{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Blank is an autogenerated mock type for the Blank type
type Blank struct {
	mock.Mock
}

// Create provides a mock function for the type Blank
func (_mock *Blank) Create(x interface{}) error {
	ret := _mock.Called(x)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if returnFunc, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = returnFunc(x)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

type Blank_expecter struct {
	mock *mock.Mock
}

func (_m *Blank) EXPECT() *Blank_expecter {
	return &Blank_expecter{mock: &_m.Mock}
}
