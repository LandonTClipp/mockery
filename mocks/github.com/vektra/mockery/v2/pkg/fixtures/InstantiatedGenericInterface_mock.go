// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewInstantiatedGenericInterface creates a new instance of InstantiatedGenericInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInstantiatedGenericInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *InstantiatedGenericInterface {
	mock := &InstantiatedGenericInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// InstantiatedGenericInterface is an autogenerated mock type for the InstantiatedGenericInterface type
type InstantiatedGenericInterface struct {
	mock.Mock
}

type InstantiatedGenericInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *InstantiatedGenericInterface) EXPECT() *InstantiatedGenericInterface_Expecter {
	return &InstantiatedGenericInterface_Expecter{mock: &_m.Mock}
}

// Func provides a mock function for the type InstantiatedGenericInterface
func (_mock *InstantiatedGenericInterface) Func(arg *float32) int {
	ret := _mock.Called(arg)

	if len(ret) == 0 {
		panic("no return value specified for Func")
	}

	var r0 int
	if returnFunc, ok := ret.Get(0).(func(*float32) int); ok {
		r0 = returnFunc(arg)
	} else {
		r0 = ret.Get(0).(int)
	}
	return r0
}

// InstantiatedGenericInterface_Func_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Func'
type InstantiatedGenericInterface_Func_Call struct {
	*mock.Call
}

// Func is a helper method to define mock.On call
//   - arg
func (_e *InstantiatedGenericInterface_Expecter) Func(arg interface{}) *InstantiatedGenericInterface_Func_Call {
	return &InstantiatedGenericInterface_Func_Call{Call: _e.mock.On("Func", arg)}
}

func (_c *InstantiatedGenericInterface_Func_Call) Run(run func(arg *float32)) *InstantiatedGenericInterface_Func_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(arg)
	})
	return _c
}

func (_c *InstantiatedGenericInterface_Func_Call) Return(nOut int) *InstantiatedGenericInterface_Func_Call {
	_c.Call.Return(nOut)
	return _c
}

func (_c *InstantiatedGenericInterface_Func_Call) RunAndReturn(run func(arg *float32) int) *InstantiatedGenericInterface_Func_Call {
	_c.Call.Return(run)
	return _c
}
