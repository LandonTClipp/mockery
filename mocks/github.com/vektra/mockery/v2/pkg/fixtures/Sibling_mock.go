// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewSibling creates a new instance of Sibling. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSibling(t interface {
	mock.TestingT
	Cleanup(func())
}) *Sibling {
	mock := &Sibling{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Sibling is an autogenerated mock type for the Sibling type
type Sibling struct {
	mock.Mock
}

// DoSomething provides a mock function for the type Sibling
func (_mock *Sibling) DoSomething() {
	_mock.Called()
	return
}

type Sibling_expecter struct {
	mock *mock.Mock
}

func (_m *Sibling) EXPECT() *Sibling_expecter {
	return &Sibling_expecter{mock: &_m.Mock}
}
