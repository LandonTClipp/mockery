// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	"encoding/json"

	mock "github.com/stretchr/testify/mock"
)

// NewRequesterArgSameAsImport creates a new instance of RequesterArgSameAsImport. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequesterArgSameAsImport(t interface {
	mock.TestingT
	Cleanup(func())
}) *RequesterArgSameAsImport {
	mock := &RequesterArgSameAsImport{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// RequesterArgSameAsImport is an autogenerated mock type for the RequesterArgSameAsImport type
type RequesterArgSameAsImport struct {
	mock.Mock
}

type RequesterArgSameAsImport_Expecter struct {
	mock *mock.Mock
}

func (_m *RequesterArgSameAsImport) EXPECT() *RequesterArgSameAsImport_Expecter {
	return &RequesterArgSameAsImport_Expecter{mock: &_m.Mock}
}

// Get provides a mock function for the type RequesterArgSameAsImport
func (_mock *RequesterArgSameAsImport) Get(jsonMoqParam string) *json.RawMessage {
	ret := _mock.Called(jsonMoqParam)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 *json.RawMessage
	if returnFunc, ok := ret.Get(0).(func(string) *json.RawMessage); ok {
		r0 = returnFunc(jsonMoqParam)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*json.RawMessage)
		}
	}
	return r0
}

// RequesterArgSameAsImport_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type RequesterArgSameAsImport_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
//   - jsonMoqParam
func (_e *RequesterArgSameAsImport_Expecter) Get(jsonMoqParam interface{}) *RequesterArgSameAsImport_Get_Call {
	return &RequesterArgSameAsImport_Get_Call{Call: _e.mock.On("Get", jsonMoqParam)}
}

func (_c *RequesterArgSameAsImport_Get_Call) Run(run func(jsonMoqParam string)) *RequesterArgSameAsImport_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(jsonMoqParam)
	})
	return _c
}

func (_c *RequesterArgSameAsImport_Get_Call) Return(rawMessageOut *json.RawMessage) *RequesterArgSameAsImport_Get_Call {
	_c.Call.Return(rawMessageOut)
	return _c
}

func (_c *RequesterArgSameAsImport_Get_Call) RunAndReturn(run func(jsonMoqParam string) *json.RawMessage) *RequesterArgSameAsImport_Get_Call {
	_c.Call.Return(run)
	return _c
}
