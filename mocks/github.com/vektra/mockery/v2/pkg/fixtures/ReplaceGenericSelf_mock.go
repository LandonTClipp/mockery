// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewReplaceGenericSelf creates a new instance of ReplaceGenericSelf. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReplaceGenericSelf[T any](t interface {
	mock.TestingT
	Cleanup(func())
}) *ReplaceGenericSelf[T] {
	mock := &ReplaceGenericSelf[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// ReplaceGenericSelf is an autogenerated mock type for the ReplaceGenericSelf type
type ReplaceGenericSelf[T any] struct {
	mock.Mock
}

// A provides a mock function for the type ReplaceGenericSelf
func (_mock *ReplaceGenericSelf[T]) A() T {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for A")
	}

	var r0 T
	if returnFunc, ok := ret.Get(0).(func() T); ok {
		r0 = returnFunc()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(T)
		}
	}
	return r0
}

type ReplaceGenericSelf_expecter[T any] struct {
	mock *mock.Mock
}

func (_m *ReplaceGenericSelf[T]) EXPECT() *ReplaceGenericSelf_expecter[T] {
	return &ReplaceGenericSelf_expecter[T]{mock: &_m.Mock}
}
