// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	test "github.com/vektra/mockery/v2/pkg/fixtures"
)

// NewUsesOtherPkgIface creates a new instance of UsesOtherPkgIface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUsesOtherPkgIface(t interface {
	mock.TestingT
	Cleanup(func())
}) *UsesOtherPkgIface {
	mock := &UsesOtherPkgIface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// UsesOtherPkgIface is an autogenerated mock type for the UsesOtherPkgIface type
type UsesOtherPkgIface struct {
	mock.Mock
}

// DoSomethingElse provides a mock function for the type UsesOtherPkgIface
func (_mock *UsesOtherPkgIface) DoSomethingElse(obj test.Sibling) {
	_mock.Called(obj)
	return
}

type UsesOtherPkgIface_expecter struct {
	mock *mock.Mock
}

func (_m *UsesOtherPkgIface) EXPECT() *UsesOtherPkgIface_expecter {
	return &UsesOtherPkgIface_expecter{mock: &_m.Mock}
}
