
// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package mocks

import (
    mock "github.com/stretchr/testify/mock"
)

 
// NewRequesterElided creates a new instance of RequesterElided. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequesterElided (t interface {
	mock.TestingT
	Cleanup(func())
}) *RequesterElided {
	mock := &RequesterElided{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}


// RequesterElided is an autogenerated mock type for the RequesterElided type
type RequesterElided struct {
	mock.Mock
}

type RequesterElided_Expecter struct {
	mock *mock.Mock
}

func (_m *RequesterElided) EXPECT() *RequesterElided_Expecter {
	return &RequesterElided_Expecter{mock: &_m.Mock}
}

 

// Get provides a mock function for the type RequesterElided
func (_mock *RequesterElided) Get(path string, url string) error {  
	ret := _mock.Called(path, url)

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

		
	var r0 error 
	if returnFunc, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = returnFunc(path, url)
	} else {
		r0 = ret.Error(0)
	} 
	return r0
}



// RequesterElided_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type RequesterElided_Get_Call struct {
	*mock.Call
}



// Get is a helper method to define mock.On call
//  - path
//  - url
func (_e *RequesterElided_Expecter) Get(path interface{}, url interface{}, ) *RequesterElided_Get_Call {
	return &RequesterElided_Get_Call{Call: _e.mock.On("Get",path,url, )}
}

func (_c *RequesterElided_Get_Call) Run(run func(path string, url string)) *RequesterElided_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string),args[1].(string),)
	})
	return _c
}

func (_c *RequesterElided_Get_Call) Return(err error) *RequesterElided_Get_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *RequesterElided_Get_Call) RunAndReturn(run func(path string, url string)error) *RequesterElided_Get_Call {
	_c.Call.Return(run)
	return _c
}
  

