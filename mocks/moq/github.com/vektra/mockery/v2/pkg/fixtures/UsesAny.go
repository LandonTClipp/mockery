// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package test

import (
	"sync"
)

// UsesAnyMock is a mock implementation of test.UsesAny.
//
//	func TestSomethingThatUsesUsesAny(t *testing.T) {
//
//		// make and configure a mocked test.UsesAny
//		mockedUsesAny := &UsesAnyMock{
//			GetReaderFunc: func() any {
//				panic("mock out the GetReader method")
//			},
//		}
//
//		// use mockedUsesAny in code that requires test.UsesAny
//		// and then make assertions.
//
//	}
type UsesAnyMock struct {
	// GetReaderFunc mocks the GetReader method.
	GetReaderFunc func() any

	// calls tracks calls to the methods.
	calls struct {
		// GetReader holds details about calls to the GetReader method.
		GetReader []struct {
		}
	}
	lockGetReader sync.RWMutex
}

// GetReader calls GetReaderFunc.
func (mock *UsesAnyMock) GetReader() any {
	if mock.GetReaderFunc == nil {
		panic("UsesAnyMock.GetReaderFunc: method is nil but UsesAny.GetReader was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetReader.Lock()
	mock.calls.GetReader = append(mock.calls.GetReader, callInfo)
	mock.lockGetReader.Unlock()
	return mock.GetReaderFunc()
}

// GetReaderCalls gets all the calls that were made to GetReader.
// Check the length with:
//
//	len(mockedUsesAny.GetReaderCalls())
func (mock *UsesAnyMock) GetReaderCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetReader.RLock()
	calls = mock.calls.GetReader
	mock.lockGetReader.RUnlock()
	return calls
}

// ResetGetReaderCalls reset all the calls that were made to GetReader.
func (mock *UsesAnyMock) ResetGetReaderCalls() {
	mock.lockGetReader.Lock()
	mock.calls.GetReader = nil
	mock.lockGetReader.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *UsesAnyMock) ResetCalls() {
	mock.lockGetReader.Lock()
	mock.calls.GetReader = nil
	mock.lockGetReader.Unlock()
}
