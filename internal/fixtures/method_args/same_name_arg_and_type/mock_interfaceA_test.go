
// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package same_name_arg_and_type

import (
    mock "github.com/stretchr/testify/mock"
)

 
// NewinterfaceAMock creates a new instance of interfaceAMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewinterfaceAMock (t interface {
	mock.TestingT
	Cleanup(func())
}) *interfaceAMock {
	mock := &interfaceAMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}


// interfaceAMock is an autogenerated mock type for the interfaceA type
type interfaceAMock struct {
	mock.Mock
}

type interfaceAMock_Expecter struct {
	mock *mock.Mock
}

func (_m *interfaceAMock) EXPECT() *interfaceAMock_Expecter {
	return &interfaceAMock_Expecter{mock: &_m.Mock}
}

 

// DoB provides a mock function for the type interfaceAMock
func (_mock *interfaceAMock) DoB(interfaceB1 interfaceB) interfaceB {  
	ret := _mock.Called(interfaceB1)

	if len(ret) == 0 {
		panic("no return value specified for DoB")
	}

		
	var r0 interfaceB 
	if returnFunc, ok := ret.Get(0).(func(interfaceB) interfaceB); ok {
		r0 = returnFunc(interfaceB1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaceB)
		}
	} 
	return r0
}



// interfaceAMock_DoB_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoB'
type interfaceAMock_DoB_Call struct {
	*mock.Call
}



// DoB is a helper method to define mock.On call
//  - interfaceB1
func (_e *interfaceAMock_Expecter) DoB(interfaceB1 interface{}, ) *interfaceAMock_DoB_Call {
	return &interfaceAMock_DoB_Call{Call: _e.mock.On("DoB",interfaceB1, )}
}

func (_c *interfaceAMock_DoB_Call) Run(run func(interfaceB1 interfaceB)) *interfaceAMock_DoB_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaceB),)
	})
	return _c
}

func (_c *interfaceAMock_DoB_Call) Return(interfaceBMoqParam interfaceB) *interfaceAMock_DoB_Call {
	_c.Call.Return(interfaceBMoqParam)
	return _c
}

func (_c *interfaceAMock_DoB_Call) RunAndReturn(run func(interfaceB1 interfaceB)interfaceB) *interfaceAMock_DoB_Call {
	_c.Call.Return(run)
	return _c
}
 

// DoB0 provides a mock function for the type interfaceAMock
func (_mock *interfaceAMock) DoB0(interfaceB interfaceB0) interfaceB0 {  
	ret := _mock.Called(interfaceB)

	if len(ret) == 0 {
		panic("no return value specified for DoB0")
	}

		
	var r0 interfaceB0 
	if returnFunc, ok := ret.Get(0).(func(interfaceB0) interfaceB0); ok {
		r0 = returnFunc(interfaceB)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaceB0)
		}
	} 
	return r0
}



// interfaceAMock_DoB0_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoB0'
type interfaceAMock_DoB0_Call struct {
	*mock.Call
}



// DoB0 is a helper method to define mock.On call
//  - interfaceB
func (_e *interfaceAMock_Expecter) DoB0(interfaceB interface{}, ) *interfaceAMock_DoB0_Call {
	return &interfaceAMock_DoB0_Call{Call: _e.mock.On("DoB0",interfaceB, )}
}

func (_c *interfaceAMock_DoB0_Call) Run(run func(interfaceB interfaceB0)) *interfaceAMock_DoB0_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaceB0),)
	})
	return _c
}

func (_c *interfaceAMock_DoB0_Call) Return(interfaceB0MoqParam interfaceB0) *interfaceAMock_DoB0_Call {
	_c.Call.Return(interfaceB0MoqParam)
	return _c
}

func (_c *interfaceAMock_DoB0_Call) RunAndReturn(run func(interfaceB interfaceB0)interfaceB0) *interfaceAMock_DoB0_Call {
	_c.Call.Return(run)
	return _c
}
 

// DoB0v2 provides a mock function for the type interfaceAMock
func (_mock *interfaceAMock) DoB0v2(interfaceB01 interfaceB0) interfaceB0 {  
	ret := _mock.Called(interfaceB01)

	if len(ret) == 0 {
		panic("no return value specified for DoB0v2")
	}

		
	var r0 interfaceB0 
	if returnFunc, ok := ret.Get(0).(func(interfaceB0) interfaceB0); ok {
		r0 = returnFunc(interfaceB01)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaceB0)
		}
	} 
	return r0
}



// interfaceAMock_DoB0v2_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoB0v2'
type interfaceAMock_DoB0v2_Call struct {
	*mock.Call
}



// DoB0v2 is a helper method to define mock.On call
//  - interfaceB01
func (_e *interfaceAMock_Expecter) DoB0v2(interfaceB01 interface{}, ) *interfaceAMock_DoB0v2_Call {
	return &interfaceAMock_DoB0v2_Call{Call: _e.mock.On("DoB0v2",interfaceB01, )}
}

func (_c *interfaceAMock_DoB0v2_Call) Run(run func(interfaceB01 interfaceB0)) *interfaceAMock_DoB0v2_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interfaceB0),)
	})
	return _c
}

func (_c *interfaceAMock_DoB0v2_Call) Return(interfaceB0MoqParam interfaceB0) *interfaceAMock_DoB0v2_Call {
	_c.Call.Return(interfaceB0MoqParam)
	return _c
}

func (_c *interfaceAMock_DoB0v2_Call) RunAndReturn(run func(interfaceB01 interfaceB0)interfaceB0) *interfaceAMock_DoB0v2_Call {
	_c.Call.Return(run)
	return _c
}
  

