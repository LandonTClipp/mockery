// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package same_name_arg_and_type

import (
	mock "github.com/stretchr/testify/mock"
)

// NewinterfaceBMock creates a new instance of interfaceBMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewinterfaceBMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *interfaceBMock {
	mock := &interfaceBMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// interfaceBMock is an autogenerated mock type for the interfaceB type
type interfaceBMock struct {
	mock.Mock
}

// GetData provides a mock function for the type interfaceBMock
func (_mock *interfaceBMock) GetData() int {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetData")
	}

	var r0 int
	if returnFunc, ok := ret.Get(0).(func() int); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(int)
	}
	return r0
}

type interfaceBMock_expecter struct {
	mock *mock.Mock
}

func (_m *interfaceBMock) EXPECT() *interfaceBMock_expecter {
	return &interfaceBMock_expecter{mock: &_m.Mock}
}
