// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package example_project_test

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockStringer creates a new instance of MockStringer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockStringer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockStringer {
	mock := &MockStringer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockStringer is an autogenerated mock type for the Stringer type
type MockStringer struct {
	mock.Mock
}

// String provides a mock function for the type MockStringer
func (_mock *MockStringer) String() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for String")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

type MockStringer_expecter struct {
	mock *mock.Mock
}

func (_m *MockStringer) EXPECT() *MockStringer_expecter {
	return &MockStringer_expecter{mock: &_m.Mock}
}
