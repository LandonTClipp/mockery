// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package subpkg2

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockFoo creates a new instance of MockFoo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFoo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFoo {
	mock := &MockFoo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockFoo is an autogenerated mock type for the Foo type
type MockFoo struct {
	mock.Mock
}

// Get provides a mock function for the type MockFoo
func (_mock *MockFoo) Get() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Get")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

type MockFoo_expecter struct {
	mock *mock.Mock
}

func (_m *MockFoo) EXPECT() *MockFoo_expecter {
	return &MockFoo_expecter{mock: &_m.Mock}
}
