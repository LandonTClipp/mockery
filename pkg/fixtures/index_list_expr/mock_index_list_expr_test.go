// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package index_list_expr_test

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockIndexListExpr creates a new instance of MockIndexListExpr. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIndexListExpr(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIndexListExpr {
	mock := &MockIndexListExpr{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockIndexListExpr is an autogenerated mock type for the IndexListExpr type
type MockIndexListExpr struct {
	mock.Mock
}

// Func provides a mock function for the type MockIndexListExpr
func (_mock *MockIndexListExpr) Func(arg1 *int, arg2 string) bool {
	ret := _mock.Called(arg1, arg2)

	if len(ret) == 0 {
		panic("no return value specified for Func")
	}

	var r0 bool
	if returnFunc, ok := ret.Get(0).(func(*int, string) bool); ok {
		r0 = returnFunc(arg1, arg2)
	} else {
		r0 = ret.Get(0).(bool)
	}
	return r0
}

type MockIndexListExpr_expecter struct {
	mock *mock.Mock
}

func (_m *MockIndexListExpr) EXPECT() *MockIndexListExpr_expecter {
	return &MockIndexListExpr_expecter{mock: &_m.Mock}
}
