// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package type_alias_test

import (
	mock "github.com/stretchr/testify/mock"
	"github.com/vektra/mockery/v2/pkg/fixtures/type_alias"
	"github.com/vektra/mockery/v2/pkg/fixtures/type_alias/subpkg"
)

// NewInterface2 creates a new instance of Interface2. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInterface2(t interface {
	mock.TestingT
	Cleanup(func())
}) *Interface2 {
	mock := &Interface2{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Interface2 is an autogenerated mock type for the Interface2 type
type Interface2 struct {
	mock.Mock
}

// F provides a mock function for the type Interface2
func (_mock *Interface2) F(v1 type_alias.Type, v2 type_alias.S, s subpkg.S) {
	_mock.Called(v1, v2, s)
	return
}

type Interface2_expecter struct {
	mock *mock.Mock
}

func (_m *Interface2) EXPECT() *Interface2_expecter {
	return &Interface2_expecter{mock: &_m.Mock}
}
