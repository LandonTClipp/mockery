// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package {{.PkgName}}

import (
{{- range .Imports}}
	{{. | ImportStatement}}
{{- end}}
    mock "github.com/stretchr/testify/mock"
)

{{- range $i, $mock := .Mocks }}
// New{{ .MockName }} creates a new instance of {{ .MockName }}. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func New{{ .MockName}}
{{- if .TypeParams -}}
	[
        {{- range $index, $param := .TypeParams}}
			{{- if $index}}, {{end}}{{$param.Name | Exported}} {{$param.TypeString}}
	    {{- end -}}
    ]
{{- end }} (t interface {
	mock.TestingT
	Cleanup(func())
}) *{{ .MockName }}
{{- if .TypeParams -}}
	[
        {{- range $index, $param := .TypeParams}}
			{{- if $index}}, {{end}}{{$param.Name | Exported}}
	    {{- end -}}
    ]
{{- end }} {
	mock := &{{ .MockName }}{{- if .TypeParams -}}
	[
        {{- range $index, $param := .TypeParams}}
			{{- if $index}}, {{end}}{{$param.Name | Exported}}
	    {{- end -}}
    ]
{{- end }}{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
{{- end }}
